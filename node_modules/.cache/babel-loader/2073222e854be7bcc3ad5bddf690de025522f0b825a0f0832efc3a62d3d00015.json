{"ast":null,"code":"import { generateCode, isValidShortcode, urlMap, statsMap } from \"../utils\";\nimport { Log } from \"../logger\";\nexport async function createShortUrl(url, customCode, validityMinutes) {\n  const code = customCode || generateCode();\n  if (!isValidShortcode(code)) {\n    await Log(\"frontend\", \"warn\", \"Controller\", \"Invalid shortcode\");\n    throw new Error(\"Invalid shortcode\");\n  }\n  if (urlMap.has(code)) {\n    await Log(\"frontend\", \"warn\", \"Controller\", \"Shortcode already exists\");\n    throw new Error(\"Shortcode already exists\");\n  }\n  const expiry = Date.now() + (validityMinutes ? validityMinutes * 60000 : 1800000);\n  urlMap.set(code, {\n    url,\n    expiry\n  });\n  statsMap.set(code, 0);\n  await Log(\"frontend\", \"info\", \"Controller\", `Created short URL for code: ${code}`);\n  return `${window.location.origin}/${code}`;\n}\nexport async function getStatsFor(code) {\n  if (!statsMap.has(code)) {\n    await Log(\"frontend\", \"error\", \"Controller\", `Stats not found for ${code}`);\n    throw new Error(\"Stats not found\");\n  }\n  await Log(\"frontend\", \"info\", \"Controller\", `Fetched stats for ${code}`);\n  return statsMap.get(code);\n}","map":{"version":3,"names":["generateCode","isValidShortcode","urlMap","statsMap","Log","createShortUrl","url","customCode","validityMinutes","code","Error","has","expiry","Date","now","set","window","location","origin","getStatsFor","get"],"sources":["C:/12200526/question1/src/controller/urlController.js"],"sourcesContent":["import { generateCode, isValidShortcode, urlMap, statsMap } from \"../utils\";\r\nimport { Log } from \"../logger\";\r\n\r\nexport async function createShortUrl(url, customCode, validityMinutes) {\r\n  const code = customCode || generateCode();\r\n\r\n  if (!isValidShortcode(code)) {\r\n    await Log(\"frontend\", \"warn\", \"Controller\", \"Invalid shortcode\");\r\n    throw new Error(\"Invalid shortcode\");\r\n  }\r\n\r\n  if (urlMap.has(code)) {\r\n    await Log(\"frontend\", \"warn\", \"Controller\", \"Shortcode already exists\");\r\n    throw new Error(\"Shortcode already exists\");\r\n  }\r\n\r\n  const expiry = Date.now() + (validityMinutes ? validityMinutes * 60000 : 1800000);\r\n  urlMap.set(code, { url, expiry });\r\n  statsMap.set(code, 0);\r\n\r\n  await Log(\"frontend\", \"info\", \"Controller\", `Created short URL for code: ${code}`);\r\n  return `${window.location.origin}/${code}`;\r\n}\r\n\r\nexport async function getStatsFor(code) {\r\n  if (!statsMap.has(code)) {\r\n    await Log(\"frontend\", \"error\", \"Controller\", `Stats not found for ${code}`);\r\n    throw new Error(\"Stats not found\");\r\n  }\r\n\r\n  await Log(\"frontend\", \"info\", \"Controller\", `Fetched stats for ${code}`);\r\n  return statsMap.get(code);\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3E,SAASC,GAAG,QAAQ,WAAW;AAE/B,OAAO,eAAeC,cAAcA,CAACC,GAAG,EAAEC,UAAU,EAAEC,eAAe,EAAE;EACrE,MAAMC,IAAI,GAAGF,UAAU,IAAIP,YAAY,CAAC,CAAC;EAEzC,IAAI,CAACC,gBAAgB,CAACQ,IAAI,CAAC,EAAE;IAC3B,MAAML,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,mBAAmB,CAAC;IAChE,MAAM,IAAIM,KAAK,CAAC,mBAAmB,CAAC;EACtC;EAEA,IAAIR,MAAM,CAACS,GAAG,CAACF,IAAI,CAAC,EAAE;IACpB,MAAML,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,0BAA0B,CAAC;IACvE,MAAM,IAAIM,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EAEA,MAAME,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIN,eAAe,GAAGA,eAAe,GAAG,KAAK,GAAG,OAAO,CAAC;EACjFN,MAAM,CAACa,GAAG,CAACN,IAAI,EAAE;IAAEH,GAAG;IAAEM;EAAO,CAAC,CAAC;EACjCT,QAAQ,CAACY,GAAG,CAACN,IAAI,EAAE,CAAC,CAAC;EAErB,MAAML,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,+BAA+BK,IAAI,EAAE,CAAC;EAClF,OAAO,GAAGO,MAAM,CAACC,QAAQ,CAACC,MAAM,IAAIT,IAAI,EAAE;AAC5C;AAEA,OAAO,eAAeU,WAAWA,CAACV,IAAI,EAAE;EACtC,IAAI,CAACN,QAAQ,CAACQ,GAAG,CAACF,IAAI,CAAC,EAAE;IACvB,MAAML,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,uBAAuBK,IAAI,EAAE,CAAC;IAC3E,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA,MAAMN,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,qBAAqBK,IAAI,EAAE,CAAC;EACxE,OAAON,QAAQ,CAACiB,GAAG,CAACX,IAAI,CAAC;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}